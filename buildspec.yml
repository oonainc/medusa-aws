version: 0.2

env:
  secrets-manager:
    SERVER_CRT: "arn:aws:secretsmanager:us-east-1:236426078444:secret:ecomm-secrets-X5kIyP:SERVER_CRT::"
    SERVER_KEY: "arn:aws:secretsmanager:us-east-1:236426078444:secret:ecomm-secrets-X5kIyP:SERVER_KEY::"

phases:
  install:
    runtime-versions:
      python: 3.x # to be able to use AWS CLI
    commands:
      - echo AWS CLI version...
      - aws --version

  pre_build:
    commands:
      - echo setting AWS zone to us-east-1...
      - aws configure set default.region us-east-1

      # we need these files availabe in secrets manager to setup Private Trust with Self-Signed Certificates
      # between our backend and API Gateway, since API Gateway terminates TLS for us
      # @TODO instead of writing to disk, let the backend fetch them online using aws kms sdk
      - printf "%s\n" "$SERVER_CRT" > certs/server.crt
      - printf "%s\n" "$SERVER_KEY" > certs/server.key
      # API Gateway mTLS truststore
      - aws s3 cp s3://artifacts-keep/apigateway_mTLS/truststore.pem certs/truststore.pem

      # generate a unique image tag instead of using string 'latest' as tag
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - TIMESTAMP=$(date +%Y%m%d%H%M%S)
      - IMAGE_TAG="$COMMIT_HASH-$TIMESTAMP"
      - echo unique image tag is $IMAGE_TAG

  build:
    commands:
      - echo building docker image and push to ECR...
      - docker build -t oonainc/ecomm:$IMAGE_TAG .

  post_build:
    commands:
      # retrieve an authentication token and authenticate your Docker client to your registry. Use the AWS CLI
      # the IAM role we attached to CodeBuild help makes this easier
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 236426078444.dkr.ecr.us-east-1.amazonaws.com

      # tag image so we can push the image to ECR
      - docker tag oonainc/ecomm:$IMAGE_TAG 236426078444.dkr.ecr.us-east-1.amazonaws.com/oonainc/ecomm:$IMAGE_TAG
      # push the image to ECR
      - docker push "236426078444.dkr.ecr.us-east-1.amazonaws.com/oonainc/ecomm:$IMAGE_TAG"
      # write image detail to be used by CodeDeploy
      - printf '{"imageUri":"%s"}' "236426078444.dkr.ecr.us-east-1.amazonaws.com/oonainc/ecomm:$IMAGE_TAG" > imageDetail.json
      # CONTAINER_NAME must match container details container name used in ecs task definition
      - CONTAINER_NAME="ecomm-nodejs-container"
      - printf '[{"name":"%s","imageUri":"%s"}]' "$CONTAINER_NAME" "236426078444.dkr.ecr.us-east-1.amazonaws.com/oonainc/ecomm:$IMAGE_TAG" > imagedefinitions.json

artifacts:
  files:
    - imageDetail.json
    - imagedefinitions.json
    - taskdef.json
